spring:
  security:
    oauth2:
      client:
        provider:
          wiremock:
            authorization-uri: http://localhost:8077/oauth/authorize
            token-uri: http://localhost:8077/oauth/token
            user-info-uri: http://localhost:8077/userinfo
            user-name-attribute: sub
          mocklab:
            authorization-uri: https://oauth.mocklab.io/oauth/authorize
            token-uri: https://oauth.mocklab.io/oauth/token
            user-info-uri: https://oauth.mocklab.io/userinfo
            user-name-attribute: sub
            jwk-set-uri: https://oauth.mocklab.io/.well-known/jwks.json
        registration:
          github:
            clientId: 8bcfe1e20f40e221e403
            clientSecret: f206a5d74ceff5a54e1356a2062df06f5d7e563a
          google:
            client-id: 21321830169174-1cj6oosadhe17jstk1mhrcsm642okbt6.apps.googleusercontent.com
            client-secret: 0UO1QTS5SH8BaCujgg7ltsN4
          wiremock:
            provider: wiremock
            authorization-grant-type: authorization_code
            scope: email
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            clientId: wm
            clientSecret: whatever
          mocklab:
            provider: mocklab
            authorization-grant-type: authorization_code
            scope: openid, profile, email
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            clientId: mocklab_oidc
            clientSecret: whatever

